/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProxyRegistry,
  ProxyRegistryInterface,
} from "../../../contracts/registry/ProxyRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DELAY_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegateProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "endGrantAuthentication",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "proxies",
    outputs: [
      {
        internalType: "contract OwnableDelegateProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registerProxy",
    outputs: [
      {
        internalType: "contract OwnableDelegateProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "registerProxyFor",
    outputs: [
      {
        internalType: "contract OwnableDelegateProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registerProxyOverride",
    outputs: [
      {
        internalType: "contract OwnableDelegateProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "revokeAuthentication",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "startGrantAuthentication",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferAccessTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526212750060055534801561001757600080fd5b506000610022610071565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610075565b3390565b6116dc806100846000396000f3fe60806040523480156200001157600080fd5b5060043610620000d55760003560e01c806268674114620000da57806338b6e407146200011f57806353376d1f146200014a5780635eebea201462000173578063631d9e3f14620001ae57806369dc9ff314620001b8578063715018a614620001f55780638da5cb5b14620001ff57806397204d8e1462000209578063c45527911462000213578063d4e8e063146200023c578063dcfa92221462000265578063ddd81f821462000296578063e71a02e114620002a0578063f2fde38b14620002aa575b600080fd5b6200010360048036036020811015620000f257600080fd5b50356001600160a01b0316620002d3565b604080516001600160a01b039092168252519081900360200190f35b62000148600480360360208110156200013757600080fd5b50356001600160a01b03166200047e565b005b62000148600480360360208110156200016257600080fd5b50356001600160a01b0316620005be565b6200019c600480360360208110156200018b57600080fd5b50356001600160a01b031662000647565b60408051918252519081900360200190f35b6200010362000659565b620001e160048036036020811015620001d057600080fd5b50356001600160a01b031662000792565b604080519115158252519081900360200190f35b62000148620007a7565b6200010362000848565b6200010362000857565b62000103600480360360208110156200022b57600080fd5b50356001600160a01b031662000866565b62000148600480360360208110156200025457600080fd5b50356001600160a01b031662000881565b62000148600480360360408110156200027d57600080fd5b506001600160a01b038135811691602001351662000982565b6200010362000a75565b6200019c62000a87565b6200014860048036036020811015620002c257600080fd5b50356001600160a01b031662000a8d565b6001600160a01b03818116600090815260026020526040812054909116156200033e576040805162461bcd60e51b81526020600482015260186024820152775573657220616c72656164792068617320612070726f787960401b604482015290519081900360640190fd5b600154604080516001600160a01b0380861660248301523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b1790529151859392909216916200039e9062000b8a565b80846001600160a01b03168152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620003f8578181015183820152602001620003de565b50505050905090810190601f168015620004265780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f0801580156200044a573d6000803e3d6000fd5b506001600160a01b03928316600090815260026020526040902080546001600160a01b031916938216939093179092555090565b6200048862000b86565b6001600160a01b03166200049b62000848565b6001600160a01b031614620004e6576040805162461bcd60e51b8152602060048201819052602482015260008051602062001604833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526004602052604090205460ff161580156200052757506001600160a01b03811660009081526003602052604090205415155b80156200055057506005546001600160a01b038216600090815260036020526040902054429101105b6200058d5760405162461bcd60e51b8152600401808060200182810382526046815260200180620015be6046913960600191505060405180910390fd5b6001600160a01b0316600090815260036020908152604080832083905560049091529020805460ff19166001179055565b620005c862000b86565b6001600160a01b0316620005db62000848565b6001600160a01b03161462000626576040805162461bcd60e51b8152602060048201819052602482015260008051602062001604833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19169055565b60036020526000908152604090205481565b6001546040805133602482018190523060448084019190915283518084039091018152606490920183526020820180516001600160e01b031663485cc95560e01b17905291516000936001600160a01b03169190620006b89062000b8a565b80846001600160a01b03168152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562000712578181015183820152602001620006f8565b50505050905090810190601f168015620007405780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f08015801562000764573d6000803e3d6000fd5b5033600090815260026020526040902080546001600160a01b0319166001600160a01b038316179055919050565b60046020526000908152604090205460ff1681565b620007b162000b86565b6001600160a01b0316620007c462000848565b6001600160a01b0316146200080f576040805162461bcd60e51b8152602060048201819052602482015260008051602062001604833981519152604482015290519081900360640190fd5b600080546040516001600160a01b039091169060008051602062001624833981519152908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6001546001600160a01b031681565b6002602052600090815260409020546001600160a01b031681565b6200088b62000b86565b6001600160a01b03166200089e62000848565b6001600160a01b031614620008e9576040805162461bcd60e51b8152602060048201819052602482015260008051602062001604833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526004602052604090205460ff161580156200092957506001600160a01b038116600090815260036020526040902054155b620009665760405162461bcd60e51b8152600401808060200182810382526033815260200180620016746033913960400191505060405180910390fd5b6001600160a01b03166000908152600360205260409020429055565b6001600160a01b0380831660009081526002602052604090205416338114620009dd5760405162461bcd60e51b815260040180806020018281038252602e8152602001806200156a602e913960400191505060405180910390fd5b6001600160a01b03828116600090815260026020526040902054161562000a365760405162461bcd60e51b8152600401808060200182810382526030815260200180620016446030913960400191505060405180910390fd5b6001600160a01b0392831660009081526002602052604080822080546001600160a01b0319908116909155938516825290208054919093169116179055565b600062000a8233620002d3565b905090565b60055481565b62000a9762000b86565b6001600160a01b031662000aaa62000848565b6001600160a01b03161462000af5576040805162461bcd60e51b8152602060048201819052602482015260008051602062001604833981519152604482015290519081900360640190fd5b6001600160a01b03811662000b3c5760405162461bcd60e51b8152600401808060200182810382526026815260200180620015986026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216916000805160206200162483398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6109d18062000b998339019056fe608060405234801561001057600080fd5b506040516109d13803806109d18339818101604052606081101561003357600080fd5b8151602083015160408085018051915193959294830192918464010000000082111561005e57600080fd5b90830190602082018581111561007357600080fd5b825164010000000081118282018810171561008d57600080fd5b82525081516020918201929091019080838360005b838110156100ba5781810151838201526020016100a2565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b506040525050506100fd836101f060201b60201c565b61010682610212565b6000826001600160a01b0316826040518082805190602001908083835b602083106101425780518252601f199092019160209182019101610123565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146101a2576040519150601f19603f3d011682016040523d82523d6000602084013e6101a7565b606091505b50509050806101e75760405162461bcd60e51b815260040180806020018281038252602a8152602001806109a7602a913960400191505060405180910390fd5b505050506102a7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b038281169116141561025f5760405162461bcd60e51b81526004018080602001828103825260268152602001806109816026913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b6106cb806102b66000396000f3fe6080604052600436106100605760003560e01c8063025313a2146100ec5780633659cfe61461011d5780634555d5c9146101525780634f1ef286146101795780635c60da1b1461022d5780636fde820214610242578063f1739cae14610257575b600061006a61028a565b90506001600160a01b0381166100c7576040805162461bcd60e51b815260206004820152601d60248201527f50726f787920696d706c656d656e746174696f6e207265717569726564000000604482015290519081900360640190fd5b60405136600082376000803683855af43d806000843e8180156100e8578184f35b8184fd5b3480156100f857600080fd5b50610101610299565b604080516001600160a01b039092168252519081900360200190f35b34801561012957600080fd5b506101506004803603602081101561014057600080fd5b50356001600160a01b03166102a8565b005b34801561015e57600080fd5b5061016761030b565b60408051918252519081900360200190f35b6101506004803603604081101561018f57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156101b957600080fd5b8201836020820111156101cb57600080fd5b803590602001918460018302840111600160201b831117156101ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610310945050505050565b34801561023957600080fd5b5061010161028a565b34801561024e57600080fd5b5061010161046c565b34801561026357600080fd5b506101506004803603602081101561027a57600080fd5b50356001600160a01b031661047b565b6000546001600160a01b031690565b60006102a361046c565b905090565b6102b0610299565b6001600160a01b0316336001600160a01b0316146102ff5760405162461bcd60e51b815260040180806020018281038252602981526020018061066d6029913960400191505060405180910390fd5b6103088161056b565b50565b600290565b610318610299565b6001600160a01b0316336001600160a01b0316146103675760405162461bcd60e51b815260040180806020018281038252602981526020018061066d6029913960400191505060405180910390fd5b610370826102a8565b6000306001600160a01b0316826040518082805190602001908083835b602083106103ac5780518252601f19909201916020918201910161038d565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461040c576040519150601f19603f3d011682016040523d82523d6000602084013e610411565b606091505b5050905080610467576040805162461bcd60e51b815260206004820152601f60248201527f43616c6c206661696c65642061667465722070726f7879207570677261646500604482015290519081900360640190fd5b505050565b6001546001600160a01b031690565b610483610299565b6001600160a01b0316336001600160a01b0316146104d25760405162461bcd60e51b815260040180806020018281038252602981526020018061066d6029913960400191505060405180910390fd5b6001600160a01b0381166105175760405162461bcd60e51b81526004018080602001828103825260248152602001806106496024913960400191505060405180910390fd5b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9610540610299565b604080516001600160a01b03928316815291841660208301528051918290030190a161030881610600565b6000546001600160a01b03828116911614156105b85760405162461bcd60e51b81526004018080602001828103825260268152602001806106236026913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560405190917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91a250565b600180546001600160a01b0319166001600160a01b039290921691909117905556fe50726f787920616c72656164792075736573207468697320696d706c656d656e746174696f6e4e6577206f776e65722063616e6e6f7420626520746865206e756c6c20616464726573734f6e6c79207468652070726f7879206f776e65722063616e2063616c6c2074686973206d6574686f64a26469706673582212202d83623d4d3e1301c2e767e7e1816decaac33980c8351eceb713500362489e9564736f6c6343000705003350726f787920616c72656164792075736573207468697320696d706c656d656e746174696f6e4f776e61626c6544656c656761746550726f7879206661696c656420696d706c656d656e746174696f6e50726f7879207472616e736665722063616e206f6e6c792062652063616c6c6564206279207468652070726f78794f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e7472616374206973206e6f206c6f6e6765722070656e64696e67206f722068617320616c7265616479206265656e20617070726f7665642062792072656769737472794f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e050726f7879207472616e7366657220686173206578697374696e672070726f78792061732064657374696e6174696f6e436f6e747261637420697320616c726561647920616c6c6f77656420696e2072656769737472792c206f722070656e64696e67a264697066735822122080a78b7670122ba31ba9ff63be90a3f377690cdb10fc4434d5810674f6b6335c64736f6c63430007050033";

type ProxyRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyRegistry__factory extends ContractFactory {
  constructor(...args: ProxyRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyRegistry> {
    return super.deploy(overrides || {}) as Promise<ProxyRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyRegistry {
    return super.attach(address) as ProxyRegistry;
  }
  override connect(signer: Signer): ProxyRegistry__factory {
    return super.connect(signer) as ProxyRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyRegistryInterface {
    return new utils.Interface(_abi) as ProxyRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyRegistry {
    return new Contract(address, _abi, signerOrProvider) as ProxyRegistry;
  }
}
