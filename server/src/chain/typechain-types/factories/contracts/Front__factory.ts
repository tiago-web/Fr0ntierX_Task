/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Front, FrontInterface } from "../../contracts/Front";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Front__InvalidQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastTokenId",
        type: "uint256",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "string[]",
        name: "ipfsHashes",
        type: "string[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526005815264119c9bdb9d60da1b60208083019182528351808501909452600384526211949560ea1b9084015281519192916200005a916002916200007d565b508051620000709060039060208401906200007d565b5050600080555062000160565b8280546200008b9062000123565b90600052602060002090601f016020900481019282620000af5760008555620000fa565b82601f10620000ca57805160ff1916838001178555620000fa565b82800160010185558215620000fa579182015b82811115620000fa578251825591602001919060010190620000dd565b50620001089291506200010c565b5090565b5b808211156200010857600081556001016200010d565b600181811c908216806200013857607f821691505b602082108114156200015a57634e487b7160e01b600052602260045260246000fd5b50919050565b6111d680620001706000396000f3fe6080604052600436106100b85760003560e01c806301ffc9a7146100bd57806306fdde03146100f2578063081812fc14610114578063095ea7b31461014c57806318160ddd1461016157806323b872dd1461018457806342842e0e146101975780636352211e146101aa57806370a08231146101ca5780638a1bbf86146101ea57806395d89b41146101fd578063a22cb46514610212578063b88d4fde14610232578063c87b56dd14610245578063e985e9c514610265575b600080fd5b3480156100c957600080fd5b506100dd6100d8366004610e08565b6102ae565b60405190151581526020015b60405180910390f35b3480156100fe57600080fd5b50610107610300565b6040516100e9919061103d565b34801561012057600080fd5b5061013461012f366004610e40565b610392565b6040516001600160a01b0390911681526020016100e9565b61015f61015a366004610ddf565b6103d6565b005b34801561016d57600080fd5b50600154600054035b6040519081526020016100e9565b61015f610192366004610cf2565b610476565b61015f6101a5366004610cf2565b6105f5565b3480156101b657600080fd5b506101346101c5366004610e40565b610615565b3480156101d657600080fd5b506101766101e5366004610ca6565b610620565b61015f6101f8366004610e58565b61066e565b34801561020957600080fd5b50610107610792565b34801561021e57600080fd5b5061015f61022d366004610da5565b6107a1565b61015f610240366004610d2d565b61080d565b34801561025157600080fd5b50610107610260366004610e40565b610857565b34801561027157600080fd5b506100dd610280366004610cc0565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806102df57506380ac58cd60e01b6001600160e01b03198316145b806102fa5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461030f906110c3565b80601f016020809104026020016040519081016040528092919081815260200182805461033b906110c3565b80156103885780601f1061035d57610100808354040283529160200191610388565b820191906000526020600020905b81548152906001019060200180831161036b57829003601f168201915b5050505050905090565b600061039d826108e6565b6103ba576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006103e182610615565b9050336001600160a01b0382161461041a576103fd8133610280565b61041a576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006104818261090d565b9050836001600160a01b0316816001600160a01b0316146104b45760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610501576104e48633610280565b61050157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661052857604051633a954ecd60e21b815260040160405180910390fd5b801561053357600082555b6001600160a01b0386811660009081526005602052604080822080546000190190559187168152208054600101905561057085600160e11b61096e565b600085815260046020526040902055600160e11b83166105be57600184016000818152600460205260409020546105bc5760005481146105bc5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b031660008051602061118183398151915260405160405180910390a4505050505050565b6106108383836040518060200160405280600081525061080d565b505050565b60006102fa8261090d565b60006001600160a01b038216610649576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b60058151111561069157604051639b50b5ff60e01b815260040160405180910390fd5b818151146106b257604051639b50b5ff60e01b815260040160405180910390fd5b60008054905b8251811015610722578281815181106106e157634e487b7160e01b600052603260045260246000fd5b602002602001015160086000848152602001908152602001600020908051906020019061070f929190610b7b565b508061071a816110fe565b9150506106b8565b5061072d3384610983565b7f3a8a89b59a31c39a36febecb987e0657ab7b7c73b60ebacb44dcb9886c2d5c8a3384600161075b60005490565b6107659190611080565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a1505050565b60606003805461030f906110c3565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610818848484610476565b6001600160a01b0383163b156108515761083484848484610a64565b610851576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610862826108e6565b61087f57604051630a14c4b560e41b815260040160405180910390fd5b6000610889610b5b565b90508051600014156108aa57604051806020016040528060008152506108df565b80600860008581526020019081526020016000206040516020016108cf929190610f51565b6040516020818303038152906040525b9392505050565b60008054821080156102fa575050600090815260046020526040902054600160e01b161590565b60008160005481101561095557600081815260046020526040902054600160e01b8116610953575b806108df575060001901600081815260046020526040902054610935565b505b604051636f96cda160e11b815260040160405180910390fd5b4260a01b176001600160a01b03919091161790565b600054816109a45760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038316600090815260056020526040902080546001600160401b0184020190556109db836001841460e11b61096e565b6000828152600460205260408120919091556001600160a01b0384169083830190839083906000805160206111818339815191528180a4600183015b818114610a3d5780836000600080516020611181833981519152600080a4600101610a17565b5081610a5b57604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610a99903390899088908890600401611000565b602060405180830381600087803b158015610ab357600080fd5b505af1925050508015610ae3575060408051601f3d908101601f19168201909252610ae091810190610e24565b60015b610b3e573d808015610b11576040519150601f19603f3d011682016040523d82523d6000602084013e610b16565b606091505b508051610b36576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060405180606001604052806022815260200161115f60229139905090565b828054610b87906110c3565b90600052602060002090601f016020900481019282610ba95760008555610bef565b82601f10610bc257805160ff1916838001178555610bef565b82800160010185558215610bef579182015b82811115610bef578251825591602001919060010190610bd4565b50610bfb929150610bff565b5090565b5b80821115610bfb5760008155600101610c00565b60006001600160401b03831115610c2d57610c2d61112f565b610c40601f8401601f1916602001611050565b9050828152838383011115610c5457600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114610c8257600080fd5b919050565b600082601f830112610c97578081fd5b6108df83833560208501610c14565b600060208284031215610cb7578081fd5b6108df82610c6b565b60008060408385031215610cd2578081fd5b610cdb83610c6b565b9150610ce960208401610c6b565b90509250929050565b600080600060608486031215610d06578081fd5b610d0f84610c6b565b9250610d1d60208501610c6b565b9150604084013590509250925092565b60008060008060808587031215610d42578081fd5b610d4b85610c6b565b9350610d5960208601610c6b565b92506040850135915060608501356001600160401b03811115610d7a578182fd5b8501601f81018713610d8a578182fd5b610d9987823560208401610c14565b91505092959194509250565b60008060408385031215610db7578182fd5b610dc083610c6b565b915060208301358015158114610dd4578182fd5b809150509250929050565b60008060408385031215610df1578182fd5b610dfa83610c6b565b946020939093013593505050565b600060208284031215610e19578081fd5b81356108df81611145565b600060208284031215610e35578081fd5b81516108df81611145565b600060208284031215610e51578081fd5b5035919050565b60008060408385031215610e6a578182fd5b823591506020808401356001600160401b0380821115610e88578384fd5b818601915086601f830112610e9b578384fd5b813581811115610ead57610ead61112f565b8060051b610ebc858201611050565b8281528581019085870183870188018c1015610ed6578889fd5b8893505b84841015610f1357803586811115610ef057898afd5b610efe8d8a838b0101610c87565b84525060019390930192918701918701610eda565b50809750505050505050509250929050565b60008151808452610f3d816020860160208601611097565b601f01601f19169290920160200192915050565b600083516020610f648285838901611097565b8454918401918390600181811c9080831680610f8157607f831692505b858310811415610f9f57634e487b7160e01b88526022600452602488fd5b808015610fb35760018114610fc457610ff0565b60ff19851688528388019550610ff0565b60008b815260209020895b85811015610fe85781548a820152908401908801610fcf565b505083880195505b50939a9950505050505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061103390830184610f25565b9695505050505050565b6020815260006108df6020830184610f25565b604051601f8201601f191681016001600160401b03811182821017156110785761107861112f565b604052919050565b60008282101561109257611092611119565b500390565b60005b838110156110b257818101518382015260200161109a565b838111156108515750506000910152565b600181811c908216806110d757607f821691505b602082108114156110f857634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561111257611112611119565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461115b57600080fd5b5056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122003b03b7fb476e56ef280b1eee514e2bef41b56fa581a157f55b804e8491bef9a64736f6c63430008040033";

type FrontConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FrontConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Front__factory extends ContractFactory {
  constructor(...args: FrontConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Front> {
    return super.deploy(overrides || {}) as Promise<Front>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Front {
    return super.attach(address) as Front;
  }
  override connect(signer: Signer): Front__factory {
    return super.connect(signer) as Front__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FrontInterface {
    return new utils.Interface(_abi) as FrontInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Front {
    return new Contract(address, _abi, signerOrProvider) as Front;
  }
}
