/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TierX, TierXInterface } from "../../contracts/TierX";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051806040016040528060058152602001640a8d2cae4b60db1b815250604051806040016040528060038152602001620a8a4b60eb1b8152508160039080519060200190620000649291906200021b565b5080516200007a9060049060208401906200021b565b50506005805460ff19166012179055506200009f33683635c9adc5dea00000620000a5565b620002c7565b6001600160a01b03821662000101576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200010f60008383620001b4565b6200012b81600254620001b960201b6200061c1790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200015e9183906200061c620001b9821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000214576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200025357600085556200029e565b82601f106200026e57805160ff19168380011785556200029e565b828001600101855582156200029e579182015b828111156200029e57825182559160200191906001019062000281565b50620002ac929150620002b0565b5090565b5b80821115620002ac5760008155600101620002b1565b610b8580620002d76000396000f3fe6080604052600436106100975760003560e01c806306fdde031461009c578063095ea7b31461012657806318160ddd1461017357806323b872dd1461019a578063313ce567146101dd578063395093511461020857806370a082311461024157806395d89b4114610274578063a0712d6814610289578063a457c2d7146102a8578063a9059cbb146102e1578063dd62ed3e1461031a575b600080fd5b3480156100a857600080fd5b506100b1610355565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100eb5781810151838201526020016100d3565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013257600080fd5b5061015f6004803603604081101561014957600080fd5b506001600160a01b0381351690602001356103eb565b604080519115158252519081900360200190f35b34801561017f57600080fd5b50610188610408565b60408051918252519081900360200190f35b3480156101a657600080fd5b5061015f600480360360608110156101bd57600080fd5b506001600160a01b0381358116916020810135909116906040013561040e565b3480156101e957600080fd5b506101f2610495565b6040805160ff9092168252519081900360200190f35b34801561021457600080fd5b5061015f6004803603604081101561022b57600080fd5b506001600160a01b03813516906020013561049e565b34801561024d57600080fd5b506101886004803603602081101561026457600080fd5b50356001600160a01b03166104ec565b34801561028057600080fd5b506100b1610507565b6102a66004803603602081101561029f57600080fd5b5035610568565b005b3480156102b457600080fd5b5061015f600480360360408110156102cb57600080fd5b506001600160a01b038135169060200135610575565b3480156102ed57600080fd5b5061015f6004803603604081101561030457600080fd5b506001600160a01b0381351690602001356105dd565b34801561032657600080fd5b506101886004803603604081101561033d57600080fd5b506001600160a01b03813581169160200135166105f1565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b5050505050905090565b60006103ff6103f861067b565b848461067f565b50600192915050565b60025490565b600061041b84848461076b565b61048b8461042761067b565b61048685604051806060016040528060288152602001610a9a602891396001600160a01b038a1660009081526001602052604081209061046561067b565b6001600160a01b0316815260208101919091526040016000205491906108b4565b61067f565b5060019392505050565b60055460ff1690565b60006103ff6104ab61067b565b8461048685600160006104bc61067b565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061061c565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e15780601f106103b6576101008083540402835291602001916103e1565b610572338261094b565b50565b60006103ff61058261067b565b8461048685604051806060016040528060258152602001610b2b60259139600160006105ac61067b565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906108b4565b60006103ff6105ea61067b565b848461076b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600082820183811015610674576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b3390565b6001600160a01b0383166106c45760405162461bcd60e51b8152600401808060200182810382526024815260200180610b076024913960400191505060405180910390fd5b6001600160a01b0382166107095760405162461bcd60e51b8152600401808060200182810382526022815260200180610a526022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107b05760405162461bcd60e51b8152600401808060200182810382526025815260200180610ae26025913960400191505060405180910390fd5b6001600160a01b0382166107f55760405162461bcd60e51b8152600401808060200182810382526023815260200180610a2f6023913960400191505060405180910390fd5b610800838383610a29565b61083d81604051806060016040528060268152602001610a74602691396001600160a01b03861660009081526020819052604090205491906108b4565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461086c908261061c565b6001600160a01b03808416600081815260208181526040918290209490945580518581529051919392871692600080516020610ac283398151915292918290030190a3505050565b600081848411156109435760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109085781810151838201526020016108f0565b50505050905090810190601f1680156109355780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0382166109a6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6109b260008383610a29565b6002546109bf908261061c565b6002556001600160a01b0382166000908152602081905260409020546109e5908261061c565b6001600160a01b038316600081815260208181526040808320949094558351858152935192939192600080516020610ac28339815191529281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220873da8a309b05ccd13209debffc7cc130b070cfddd36a81a99ab2eed2f41706964736f6c63430007050033";

type TierXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TierXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TierX__factory extends ContractFactory {
  constructor(...args: TierXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TierX> {
    return super.deploy(overrides || {}) as Promise<TierX>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TierX {
    return super.attach(address) as TierX;
  }
  override connect(signer: Signer): TierX__factory {
    return super.connect(signer) as TierX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TierXInterface {
    return new utils.Interface(_abi) as TierXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TierX {
    return new Contract(address, _abi, signerOrProvider) as TierX;
  }
}
